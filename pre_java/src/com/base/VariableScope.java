package com.base;
/*
 * 변수가 영향을 미치는 범위
 * 1)지역변수(Automatic Variable)=로컬변수
 * 메소드 안에서 선언된 변수는 지역변수이다.
 * 메소드에 파라미터로 선언된 변수도 지역변수이다.
 * 	자동으로 소멸된다.
 * 	메소드 안에서만 사용할 수 있다.
 * 	반드시 초기화를 해야 한다.
 * 2)전역변수(global Variable)=맴버변수
 * 	메소드 밖 선언부에 선언했을때 초기화를 생략할 수 있다.
 * 3)정적변수(static Variable)
 * 
 * 메소드를 구현할 수 있다. (클래스 안에서)
 * void methodA(){}
 * 좌중괄호와 우중괄호가 있으면 구현이다.
 * 메소드를 호출할 수 있다. (클래스 안에서) 선언부에서는 ㄴㄴ
 * 메소드 이름뒤에 세미콜론이 오면 호출이다.
 * 내안에 정의된 메소드는 객체생성 없이도 호출할 수 있다.
 * 다른 클래스에 정의된 메소드는 반드시 객체생성을 먼저 해야 호출할 수 있다.
 * 단 static영역에서 non-static 타입의 메소드는 호출할 수 없다.
 * 	해결방법:
 * 객체생성하면 내안에 있는 메소드이더라도 호출 할 수 있다.
 * 파라미터값은 메소드가 호출될 때 결정할 수 있다.
 * 따라서 파라미터의 경우에는 별도의 초기화 없이도 호출할 때 값이 치환되므로 생략할 수 있다.(초기화)
 */
public class VariableScope {
	//선언부 선언만한다. 선언과 초기화는 한번에 가능하다.
	//int타입의 변수 x라고 읽는다.정수를 담을 수 있다.
	int x;//전역변수,멤버변수
	//x=10;이것이 되지 않는다.
	double pi;
	//double타입의 변수 pi라고 읽는다. 실수를 담을 수 있다.
	
	//생성자
	//사용자 정의 메소드1
	void go(){
		System.out.println("전역변수 x:"+x);//0 전역변수 x이다.
		
	}
	//사용자 정의 메소드2
	//파라미터는 사용자가 입력한 값을 받아 온다.
	//파리미터에 선언된 변수도 그 메소드안에서 접근가능
	void go2(int x){//파라미터 변수x
		int z;
		x=300;
		System.out.println("뿌잉:"+x);
		go();//static이 없어서 사용가능함.
	}
	//사용자 정의 메소드3
	//메인메소드
	
	public static void main(String[] args) {
		//아래 x는 
		int x;//지역변수-main메소드내에서만 사용가능하다.
		x=1;//지역변수 초기화
		System.out.println("지역변수 x:"+x);//0 전역변수 x이다.
		VariableScope vs = new VariableScope();
		VariableScope aa = new VariableScope();
		vs.go();//호출해줘야지 실행이 된다. 메소드 호출
		aa.go2(x);//호출해줘야지 실행이 된다. 메소드 호출
		//vs.go2(x);
		//파라미터가 있는 메소드 호출하는 방법
		//vs.go2(10); 파라미터가 있으니까 값을 넘겨줄 수 있다. 가능하다.
	}

}
